/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Gestion;


import Listage.List;
import NOSQL.Connexion;
import Vols.Troncon;
import Vols.VDR;
import Vols.VTR;
import Vols.Vol;
import Vols.VolTroncon;
import com.mongodb.BasicDBObject;
import com.mongodb.DBCursor;
import com.mongodb.DBObject;
import java.awt.event.KeyEvent;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Ben Abdallah Youssef
 */
public class GestionVol extends javax.swing.JFrame {

    /**
     * Creates new form pp
     */
    
  
    public GestionVol() throws UnknownHostException {
        initComponents();
        chargerListTroncon();
        chargerHeure();
        chargerTout();
        afficheV(1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        num = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jTextField1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        distance = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        frequence = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        any = new javax.swing.JTextField();
        ajouter = new javax.swing.JButton();
        ajouter1 = new javax.swing.JButton();
        supprimer = new javax.swing.JButton();
        listT = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        villeD = new javax.swing.JTextField();
        villeA = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        listMA = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        listHD = new javax.swing.JComboBox();
        listMD = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        listHA = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("TUNISAIR");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        // Code of sub-components - not shown here
        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setForeground(new java.awt.Color(255, 51, 0));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/Tunisair_logo.png")));
        jLabel1.setOpaque(true);

        num.setToolTipText("");
        num.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        num.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numActionPerformed(evt);
            }
        });
        num.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                numKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numKeyTyped(evt);
            }
        });

        jLabel2.setText("Numero");

        jDesktopPane1.setBackground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 8, Short.MAX_VALUE)
        );

        jTextField1.setEditable(false);
        jTextField1.setBackground(new java.awt.Color(204, 204, 255));
        jTextField1.setFont(new java.awt.Font("Consolas", 0, 32)); // NOI18N
        jTextField1.setText("Gestion Vol");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel7.setText("Distance");

        distance.setToolTipText("");
        distance.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        distance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                distanceActionPerformed(evt);
            }
        });
        distance.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                distanceKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                distanceKeyTyped(evt);
            }
        });

        jLabel8.setText("Fréquence");

        frequence.setToolTipText("");
        frequence.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        frequence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frequenceActionPerformed(evt);
            }
        });
        frequence.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                frequenceKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                frequenceKeyTyped(evt);
            }
        });

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero", "Distance", "Fréquence"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable);

        jLabel9.setText("Tous");

        any.setToolTipText("");
        any.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        any.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anyActionPerformed(evt);
            }
        });
        any.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                anyKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                anyKeyTyped(evt);
            }
        });

        ajouter.setText("Ajouter");
        ajouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajouterActionPerformed(evt);
            }
        });

        ajouter1.setText("Annuler");
        ajouter1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajouter1ActionPerformed(evt);
            }
        });

        supprimer.setText("Supprimer");
        supprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerActionPerformed(evt);
            }
        });

        listT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listTActionPerformed(evt);
            }
        });

        jLabel3.setText("Numero Troncon");

        villeD.setEnabled(false);
        villeD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                villeDKeyReleased(evt);
            }
        });

        villeA.setEnabled(false);
        villeA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                villeAKeyReleased(evt);
            }
        });

        jLabel4.setText("Ville de Depart");

        jLabel10.setText("Ville d'Arrivée");

        listMA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listMAActionPerformed(evt);
            }
        });

        jLabel11.setText(":");

        jLabel5.setText("Heure Depart");

        jLabel6.setText("Heure Arrivée");

        listHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listHDActionPerformed(evt);
            }
        });

        listMD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listMDActionPerformed(evt);
            }
        });

        jLabel12.setText(":");

        listHA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listHAActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(num, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(distance, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(frequence, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel9)
                            .addComponent(any, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jLabel6)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                                .addComponent(ajouter, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(supprimer)
                                .addGap(18, 18, 18)
                                .addComponent(ajouter1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(listT, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(villeD, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(villeA, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(listHD, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(listMD, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(listHA, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(listMA, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(290, 290, 290))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel9)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(distance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(num, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(frequence, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(any, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ajouter)
                            .addComponent(ajouter1)
                            .addComponent(supprimer))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel10)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(listT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(villeD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(villeA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(listHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(listMD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(listHA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(listMA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 private void afficheJTableV(Object[][] MyArray)
    {
         jTable.setModel(new javax.swing.table.DefaultTableModel(
                        MyArray,
                        new String [] {
                            "Numero", "Distance", "Fréquence"
                        }
                        )
                  {
                                               boolean[] canEdit = new boolean [] {
                            false, false, false
                        };
                        @Override
                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                            return canEdit [columnIndex];
                        }
                    }
         );
    }
    
    private boolean testV(DBObject object, int i)
    {
        if(i==1)
        return object.get("num").toString().contains(num.getText().toUpperCase())
                         &&object.get("frequence").toString().contains(frequence.getText().toUpperCase())
                         &&object.get("distance").toString().contains(distance.getText().toUpperCase());
        else return
                object.get("num").toString().contains(any.getText().toUpperCase())
                         ||object.get("frequence").toString().contains(any.getText().toUpperCase())
                         ||object.get("distance").toString().contains(any.getText().toUpperCase());
    }
   
    
    private void afficheV(int e)
{
        try {
            Connexion connexion = new Connexion("Airport");
             DBCursor listAvion = connexion.getListe("Vol");
             int i=0;
             Object[][] tab = new Object[listAvion.count()][3];             
             while (listAvion.hasNext())
             {
                 DBObject object = listAvion.next();
                 if(testV(object,e))                    
                 
                 {                    
                     tab[i][0]=object.get("num");
                     tab[i][1]=object.get("distance");
                     tab[i][2]=object.get("frequence");
                      i++;
                 }
             }                             
             
             Object[][] MyArray = new Object[i][3];
             for(int j=0;j<i;j++)
             {
                 MyArray[j][0]=tab[j][0];
                    MyArray[j][1]=tab[j][1];
                       MyArray[j][2]=tab[j][2];
             }            
         
       afficheJTableV(MyArray);
        } catch (UnknownHostException ex) {
            Logger.getLogger(GestionAvion.class.getName()).log(Level.SEVERE, null, ex);        
        }
   
}

    
   
void chargerListTroncon() throws UnknownHostException{
    Connexion connexion = new Connexion("Airport");
    DBCursor list = connexion.getListe("Troncon");
    List l =  new List(list.count());
    String listt[]=l.remplirByNum(list);
    for(int i=0;i<listt.length;i++)
    listT.addItem(listt[i]);    
    }
     
void chargerHeure(){
      for(int i=0;i<24;i++)
      {
          if(i<10)
          {
       listHD.addItem("0"+String.valueOf(i));    
       listHA.addItem("0"+String.valueOf(i));
          }
          else
          {
       listHD.addItem(i);    
       listHA.addItem(i);
          }
      }
      for(int i=0;i<60;i++)
      {
          if(i<10)
          {
       listMD.addItem("0"+String.valueOf(i));    
       listMA.addItem("0"+String.valueOf(i));
          }
          else
          {
       listMD.addItem(i);    
       listMA.addItem(i);
          }
      }
     }
     
     void chargerTout() throws UnknownHostException
    {
    Connexion connexion = new Connexion("Airport");
    if(listT.getSelectedIndex()>=0)
    {
    DBCursor list = connexion.findListe("Troncon",new BasicDBObject().append("num",listT.getSelectedItem().toString()));
    DBObject object = list.next();
    villeD.setText(object.get("villeDepart").toString());
    villeA.setText(object.get("villeArrive").toString());
    }
    }
    

    private void numActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numActionPerformed

    private void numKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numKeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if(!(Character.isDigit(c) || c==KeyEvent.VK_BACK_SPACE || c==KeyEvent.VK_DELETE)|| num.getText().length()==8)
        {   getToolkit().beep();
            evt.consume();
        }
        
    }//GEN-LAST:event_numKeyTyped

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void distanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_distanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_distanceActionPerformed

    private void distanceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_distanceKeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if(!(Character.isDigit(c) || c==KeyEvent.VK_BACK_SPACE || c==KeyEvent.VK_DELETE))
        {   getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_distanceKeyTyped

    private void frequenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frequenceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_frequenceActionPerformed

    private void frequenceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_frequenceKeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if(!(Character.isDigit(c) || c==KeyEvent.VK_BACK_SPACE || c==KeyEvent.VK_DELETE))
        {   getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_frequenceKeyTyped

    private void anyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_anyActionPerformed

    private void anyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_anyKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_anyKeyTyped

    private void numKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numKeyReleased
afficheV(1);        // TODO add your handling code here:
    }//GEN-LAST:event_numKeyReleased

    private void distanceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_distanceKeyReleased
afficheV(1);        // TODO add your handling code here:
    }//GEN-LAST:event_distanceKeyReleased

    private void frequenceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_frequenceKeyReleased
afficheV(1);        // TODO add your handling code here:
    }//GEN-LAST:event_frequenceKeyReleased

    private void anyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_anyKeyReleased
 
     afficheV(2);
    }//GEN-LAST:event_anyKeyReleased

    private void ajouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajouterActionPerformed
        // TODO add your handling code here:

        if(num.getText().length()==0)
        {
            JOptionPane.showMessageDialog(null, "*****  Saisair Le Numero  *****");

        }else if(distance.getText().length()==0)
        {
            JOptionPane.showMessageDialog(null, "*****  Saisir La Distance  *****");
        }else if(frequence.getText().length()==0)
        {
            JOptionPane.showMessageDialog(null, "*****  Saisir La Frequence  *****");
        }
        else if(Integer.parseInt(listHD.getSelectedItem().toString())==Integer.parseInt(listHA.getSelectedItem().toString()))
                    JOptionPane.showMessageDialog(null, "*****  Vérifier L'Heure De Depart ou L'Heure D'Arrivée  *****");

        else
        {
            Vol v = new Vol(num.getText(),distance.getText(),frequence.getText());
             Troncon T = new Troncon(listT.getSelectedItem().toString().toUpperCase());
            VolTroncon VT = new VolTroncon(listHD.getSelectedItem().toString()+":"+listMD.getSelectedItem().toString(),
                    listHA.getSelectedItem().toString()+":"+listMA.getSelectedItem().toString()); 
            VTR vtr = new VTR(v,T,VT);
            try {
                if (v.recherche("Vol"))
                {
                    v.ajouter("Vol");
                    vtr.ajouter("VTR");
        num.setText("");
        frequence.setText(""); 
        distance.setText(""); 
        any.setText("");
        afficheV(1);
                }
                else JOptionPane.showMessageDialog(null, "Deja Existe");
            } catch (UnknownHostException ex) {
                Logger.getLogger(GestionVol.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_ajouterActionPerformed

    private void ajouter1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajouter1ActionPerformed
        num.setText("");
        frequence.setText(""); distance.setText(""); any.setText("");
        afficheV(1);
    }//GEN-LAST:event_ajouter1ActionPerformed

    private void supprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerActionPerformed
        // TODO add your handling code here:

      if(jTable.getSelectedRow()<0)
        {
            JOptionPane.showMessageDialog(null, "*****  Selectionner Un Vol  *****");
        }

        else
        {
            Vol v = new Vol(jTable.getValueAt(jTable.getSelectedRow(), 0).toString());
            VTR vtr = new VTR(new Vol(jTable.getValueAt(jTable.getSelectedRow(), 0).toString()));
            VDR p = new VDR(new Vol(jTable.getValueAt(jTable.getSelectedRow(), 0).toString()));
            try {
                v.supprimer("Vol");
                vtr.supprimerVol("VTR");
                p.supprimerVol("VDR");
                 num.setText("");
        frequence.setText(""); distance.setText(""); any.setText("");
        afficheV(1);

            } catch (UnknownHostException ex) {
                Logger.getLogger(GestionVol.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_supprimerActionPerformed

    private void listTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listTActionPerformed
        try {
            chargerTout();        // TODO add your handling code here:
        } catch (UnknownHostException ex) {
            Logger.getLogger(GestionVol.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_listTActionPerformed

    private void villeDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_villeDKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_villeDKeyReleased

    private void villeAKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_villeAKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_villeAKeyReleased

    private void listMAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listMAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_listMAActionPerformed

    private void listHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listHDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_listHDActionPerformed

    private void listMDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listMDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_listMDActionPerformed

    private void listHAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listHAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_listHAActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new GestionVol().setVisible(true);
                } catch (UnknownHostException ex) {
                    Logger.getLogger(GestionVol.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ajouter;
    private javax.swing.JButton ajouter1;
    private javax.swing.JTextField any;
    private javax.swing.JTextField distance;
    private javax.swing.JTextField frequence;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JComboBox listHA;
    private javax.swing.JComboBox listHD;
    private javax.swing.JComboBox listMA;
    private javax.swing.JComboBox listMD;
    private javax.swing.JComboBox listT;
    private javax.swing.JTextField num;
    private javax.swing.JButton supprimer;
    private javax.swing.JTextField villeA;
    private javax.swing.JTextField villeD;
    // End of variables declaration//GEN-END:variables
}
